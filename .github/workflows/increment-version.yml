name: Increment Version and Deploy

on:
  push:
    branches:
      - main

jobs:
  increment-version-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Ensures you fetch all history for all branches and tags
          persist-credentials: false  # This avoids conflicts with the GITHUB_TOKEN

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'  # Use a valid LTS version of Node.js

      - name: Bump Version
        run: |
          echo "Bumping version..."
          version=$(cat ./script.js | grep -o 'Version [0-9]*\.[0-9]*\.[0-9]*' | awk '{print $2}')
          major=$(echo $version | cut -d '.' -f1)
          minor=$(echo $version | cut -d '.' -f2)
          patch=$(echo $version | cut -d '.' -f3)
          new_patch=$((patch + 1))
          new_version="$major.$minor.$new_patch"
          sed -i "s/Version [0-9]*\.[0-9]*\.[0-9]*/Version $new_version/" ./script.js
          echo "NEW_VERSION=$new_version" >> $GITHUB_ENV

      - name: Commit changes to main
        run: |
            git config user.email "action@github.com"
            git config user.name "GitHub Action"
            git add .
            git commit -m "Bump version to ${{ env.NEW_VERSION }}" || echo "No changes to commit"
            git push https://${{ secrets.MY_GITHUB_TOKEN }}@github.com/${{ github.repository }}
  
      - name: Checkout prod branch
        run: |
            git fetch
            git checkout prod
  
      - name: Merge main to prod and push
        run: |
            git merge main --no-ff -m "Merging main to prod with new version
            git push https://${{ secrets.MY_GITHUB_TOKEN }}@github.com/${{ github.repository }} origin prod 
            